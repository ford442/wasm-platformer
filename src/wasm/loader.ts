// Define the shape of the C++ Game class exposed via Emscripten
interface Game {
  new(): Game; // Constructor
  update(left: boolean, right: boolean, jump: boolean): void;
  getRenderData(): any;
  getBackgroundData(): any;
  getSoundData(): any;
  delete(): void;
}

// Define the shape of the fully loaded WASM module instance
export interface GameModule {
  instance: {
    Game: Game;
    HEAPF32: {
      buffer: ArrayBuffer;
    };
  };
}

// Default export of the loader function
export default async function loadGameModule(): Promise<GameModule> {
  // The 'main.js' file is generated by Emscripten
  // We need to tell TypeScript to ignore the fact that it's not a real module
  // @ts-ignore
  const moduleFactory = (await import('../../public/main.js')).default;
  return new Promise(resolve => {
    moduleFactory({
      onRuntimeInitialized() {
        resolve(this);
      }
    });
  });
}
